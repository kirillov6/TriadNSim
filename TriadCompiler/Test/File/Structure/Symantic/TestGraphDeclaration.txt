structure Str
def
	(*Графовые и обычные переменные не могут иметь одинаковые имена*)
	structure a, ar[10];
	
	$300
	integer a;
	$300
	array [10] of integer ar;


	a := node N[a]< P[a] >;
	ar[0] := node N[ ar[0 ] ] < P[ ar[ 0 ] ] >;
	
	(*Проверка на одинаковые имена*)
	$300,300
	structure ar[20],ar;
	$300,300
	structure a, a[20];
	
	(*Тип индекса должен быть целым*)
	$155,155
	structure r[1.2],rr[1, 1.2];
	
	(*Верхняя граница индексов должна быть положительной*)
	$171,171,171,171
	structure b[-1],v[0],bb[1,-1],vv[1,0];
	
	(*Размер массива должен задаваться константой*)
	$156,156
	structure L[a],LL[1,a];
	
	(*Индексация идет от 0 до max - 1*)
	ar[0]:=node P;
	ar[9]:=node P;
	
	structure arr[10,10];
	
	(*Если индекс задан константой, то идет контроль за выходом за пределы max*)
	$160
	ar[10] := node P;
	$169
	ar[-1] := node P;
	$160
	arr[0,10] := node P;
	
	ar[a + 10]:=node P;
	
	(*Проверка индексированности переменной*)
	$157
	a[0] := node P;
	$164
	ar := node P;
	
	(*Если в индексе массива при объявлении допущена ошибка, то переменная объявлется неиндексированной*)
	$207
	structure t[1+];	
	$164
	t:=node P;
	$317
	t[0]:=node P;
	
	(*Имя графовой переменной не должно совпадать с именем структуры*)
	$300
	structure Str;
	
endstr